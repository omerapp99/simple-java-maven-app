name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  versioning:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Java JDK 17
      - name: Set up Java JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Install Maven 3.9.2
      - name: Install Maven 3.9.2
        run: |
          MAVEN_VERSION=3.9.2
          # Download Maven from a valid Apache mirror
          curl -sL https://downloads.apache.org/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz -o maven.tar.gz

          # Verify the file was downloaded successfully
          if [ -s maven.tar.gz ]; then
            echo "Maven tarball downloaded successfully."
          else
            echo "Failed to download Maven tarball. Exiting."
            exit 1
          fi

          # Extract and install Maven
          tar -xzf maven.tar.gz
          sudo mv apache-maven-$MAVEN_VERSION /opt/maven
          sudo ln -s /opt/maven/bin/mvn /usr/bin/mvn

      # Confirm the correct Maven version is installed
      - name: Confirm Maven Version
        run: mvn -version

      # Increment the version in the pom.xml
      - name: Increment Version
        run: |
          current_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          new_version=$(echo $current_version | awk -F. -v OFS=. '{$NF = $NF + 1; print}')
          mvn versions:set -DnewVersion=$new_version
          mvn versions:commit
          mvn clean install

      # Commit and push the version change to the repository
      - name: Commit and push version change
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git add pom.xml
          git commit -m "Update version to $new_version"
          git push

  build:
    runs-on: ubuntu-latest
    needs: versioning  # Ensures this job runs after 'versioning'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Docker Hub using Docker Hub credentials from GitHub Secrets
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build Docker image
      - name: Build Docker Image
        run: |
          docker build --no-cache -t omerapp99/simple-java-maven-app:${{ github.sha }} .

      # Push Docker image to Docker Hub
      - name: Push Docker Image
        run: |
          docker push omerapp99/simple-java-maven-app:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensures this job runs after 'build'

    steps:
      # Install Docker and Docker Compose
      - name: Install Docker and Docker Compose
        run: |
          # Install Docker
          curl -fsSL https://get.docker.com | sudo bash

          # Add the runner to the docker group
          sudo usermod -aG docker $USER

          # Install Docker Compose
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      # Deploy Docker image using docker-compose
      - name: Deploy Docker Image
        run: |
          docker-compose up -d